name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_graph-${{ matrix.os }}
    if: |
      (github.event_name == 'push' || !startsWith(github.event.pull_request.head.label, 'denoland:'))
      && github.ref_name != 'deno_registry'
      && !startsWith(github.ref, 'refs/tags/deno/')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-2019]

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Install up Deno
        uses: denoland/setup-deno@v1.0.0

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo fmt -- --check
          deno fmt --check

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo clippy --locked --release --all-features --all-targets -- -D clippy::all
          deno lint

      - name: Cargo Build
        run: cargo build --locked --release --all-features --all-targets

      - name: Cargo Test
        run: cargo test --locked --release --all-features --all-targets

      - name: Build Wasm
        run: deno task build

      - name: Test JavaScript
        run: deno task test

      - name: Cargo publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_graph' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish

      - name: Get tag version
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build deno.land/x
        uses: s0/git-publish-subdir-action@92faf786f11dfa44fc366ac3eb274d193ca1af7e
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        env:
          REPO: self
          BRANCH: deno_registry
          FOLDER: js
          COMMIT_NAME: denobot
          COMMIT_EMAIL: denobot@users.noreply.github.com
          GITHUB_TOKEN: ${{ secrets.DENOBOT_PAT }}

      - name: Tag deno.land/x
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch origin deno_registry
          git tag deno/${{steps.get_tag_version.outputs.TAG_VERSION}} origin/deno_registry
          git push deno/${{steps.get_tag_version.outputs.TAG_VERSION}}

        # NPM Distribution
      - name: Setup node
        uses: actions/setup-node@v2
        if: contains(matrix.os, 'ubuntu')
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Build npm
        if: contains(matrix.os, 'ubuntu')
        run: deno task build:npm ${{steps.get_tag_version.outputs.TAG_VERSION}}

      - name: npm publish
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: cd npm && npm publish
