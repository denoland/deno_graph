name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_graph-${{ matrix.os }}
    if: |
      (github.event_name == 'push' || !startsWith(github.event.pull_request.head.label, 'denoland:'))
      && github.ref_name != 'deno_registry'
      && !startsWith(github.ref, 'refs/tags/deno/')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v5

      - name: Install rust
        uses: dsherret/rust-toolchain-file@v1

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: cargo fmt -- --check

      - name: Clippy
        if: contains(matrix.os, 'ubuntu')
        run: cargo clippy --locked --all-features --all-targets -- -D clippy::all

      - name: Cargo Build
        run: cargo build --locked --all-features --all-targets

      - name: Cargo Test
        run: cargo test --locked --all-features --all-targets

        # ensure we build with no default features, but only bother testing on linux
      - name: Cargo Build (no-default-features)
        if: contains(matrix.os, 'ubuntu')
        run: cargo build --locked --no-default-features

  javascript:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v5
      - name: Install rust
        uses: dsherret/rust-toolchain-file@v1
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: denoland/setup-deno@v2
        with:
          deno-version: canary
          cache: true
      - name: Format
        run: deno fmt --check
      - name: Build Wasm
        run: deno task build
      - name: Lint
        run: deno lint
      - name: Test
        run: deno task test
      - name: Publish JSR
        run: cd js && deno run -A jsr:@david/publish-on-tag@0.1.3
