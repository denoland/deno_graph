name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_graph-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-2019]

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: ☑️ Clone repository
        uses: actions/checkout@v3

      - name: ➡️ Install rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🗃️ Cache
        uses: Swatinem/rust-cache@v1

      - name: ➡️ Install up Deno
        uses: denoland/setup-deno@v1.0.0

      - name: 💄 Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo fmt -- --check
          deno fmt --check

      - name: 💄 Lint
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo clippy --locked --release --all-features --all-targets -- -D clippy::all
          deno lint

      - name: 🏗️ Build
        run: cargo build --locked --release --all-features --all-targets

      - name: 🧪 Test
        run: |
          cargo test --locked --release --all-features --all-targets
          deno task test

      - name: 💄 Ensure Wasm up to date
        if: contains(matrix.os, 'ubuntu')
        run: deno task build --check

      - name: 📦 Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_graph' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv

        # NPM Distribution
      - name: ➡️ get tag version
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: ➡️ setup node
        uses: actions/setup-node@v2
        if: contains(matrix.os, 'ubuntu')
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: 🏗️ build npm
        if: contains(matrix.os, 'ubuntu')
        run: deno task build:npm ${{steps.get_tag_version.outputs.TAG_VERSION}}

      - name: 📦 npm publish
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: cd npm && npm publish
