# mod.ts
import { MyInterface } from "https://localhost/mod.js";
import { MyInterface2 } from "./other.js";
import { MyInterface3 } from "./typescript.ts";

export class MyClass implements MyInterface, MyInterface2, MyInterface3 {
}

# https://localhost/mod.js
HEADERS: {"x-typescript-types":"./mod.d.ts"}
export class Dummy {}

# https://localhost/mod.d.ts
export interface MyInterface {
  a: string;
}

export interface MyNonPublicInterface {
  a1: string;
}

# other.js
HEADERS: {"x-typescript-types":"./other.d.ts"}

# other.d.ts
export interface MyInterface2 {
  b: string;
}

# typescript.ts
export interface MyInterface3 {
  c: string;
}

# output
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_decls: {
        3,
    },
    exports: {
        "MyClass": 3,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "MyInterface",
            #2,
        ): 0,
        (
            "MyInterface2",
            #2,
        ): 1,
        (
            "MyInterface3",
            #2,
        ): 2,
        (
            "MyClass",
            #2,
        ): 3,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            9,
                        ),
                        end: SourcePos(
                            20,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "MyInterface",
                            ),
                            specifier: "https://localhost/mod.js",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            65,
                        ),
                        end: SourcePos(
                            77,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "MyInterface2",
                            ),
                            specifier: "./other.js",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        2: Symbol {
            symbol_id: 2,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            108,
                        ),
                        end: SourcePos(
                            120,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "MyInterface3",
                            ),
                            specifier: "./typescript.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        3: Symbol {
            symbol_id: 3,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            148,
                        ),
                        end: SourcePos(
                            223,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyInterface",
                        #2,
                    ),
                ),
                Id(
                    (
                        "MyInterface2",
                        #2,
                    ),
                ),
                Id(
                    (
                        "MyInterface3",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {},
}
https://localhost/mod.d.ts: EsmModuleSymbol {
    module_id: ModuleId(
        1,
    ),
    specifier: "https://localhost/mod.d.ts",
    child_decls: {
        0,
        1,
    },
    exports: {
        "MyInterface": 0,
        "MyNonPublicInterface": 1,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "MyInterface",
            #2,
        ): 0,
        (
            "MyNonPublicInterface",
            #2,
        ): 1,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            45,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyInterface",
                        #2,
                    ),
                ),
                Id(
                    (
                        "a",
                        #0,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            is_public: false,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            47,
                        ),
                        end: SourcePos(
                            102,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyNonPublicInterface",
                        #2,
                    ),
                ),
                Id(
                    (
                        "a1",
                        #0,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {
        ModuleId(
            0,
        ): Named(
            {
                "MyInterface",
            },
        ),
    },
}
file:///other.d.ts: EsmModuleSymbol {
    module_id: ModuleId(
        2,
    ),
    specifier: "file:///other.d.ts",
    child_decls: {
        0,
    },
    exports: {
        "MyInterface2": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "MyInterface2",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            46,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyInterface2",
                        #2,
                    ),
                ),
                Id(
                    (
                        "b",
                        #0,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {
        ModuleId(
            0,
        ): Named(
            {
                "MyInterface2",
            },
        ),
    },
}
file:///typescript.ts: EsmModuleSymbol {
    module_id: ModuleId(
        3,
    ),
    specifier: "file:///typescript.ts",
    child_decls: {
        0,
    },
    exports: {
        "MyInterface3": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "MyInterface3",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            46,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyInterface3",
                        #2,
                    ),
                ),
                Id(
                    (
                        "c",
                        #0,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {
        ModuleId(
            0,
        ): Named(
            {
                "MyInterface3",
            },
        ),
    },
}
== export definitions ==
[MyClass]: file:///mod.ts:148..223
  export class MyClass implements MyInterface, MyInterface2, MyInterface3 {
  }
