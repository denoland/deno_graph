# mod.ts
export class A {
  b: B;
}

class BBase {

}

interface IBase {
}

class B extends BBase implements IBase {
  private constructor(prop: CtorProp) {}
  prop: PropValue;
  method(): ReturnValue {
  }

  method2(other: Param): void {
  }

  private asdf(private: PrivateParam): PrivateReturn {
  }

  private prop: PrivateProp;

  methodOverload(param: OverloadParam): OverloadReturn;
  methodOverload(param: PrivateImplementationParam): PrivateImplementationReturn {
  }
}

class PropValue {}
class ReturnValue {}
class Param {}
class PrivateParam {}
class PrivateReturn {}
class PrivateProp {}
class CtorProp {}
class OverloadParam {}
class OverloadReturn {}
class PrivateImplementationParam {}
class PrivateImplementationReturn {}

# output
file:///mod.ts: ModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    exports: {
        "A": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            Atom('A' type=inline),
            #2,
        ): 0,
        (
            Atom('BBase' type=inline),
            #2,
        ): 1,
        (
            Atom('IBase' type=inline),
            #2,
        ): 2,
        (
            Atom('B' type=inline),
            #2,
        ): 3,
        (
            Atom('PropValue' type=dynamic),
            #2,
        ): 4,
        (
            Atom('ReturnValue' type=dynamic),
            #2,
        ): 5,
        (
            Atom('Param' type=inline),
            #2,
        ): 6,
        (
            Atom('PrivateParam' type=dynamic),
            #2,
        ): 7,
        (
            Atom('PrivateReturn' type=dynamic),
            #2,
        ): 8,
        (
            Atom('PrivateProp' type=dynamic),
            #2,
        ): 9,
        (
            Atom('CtorProp' type=dynamic),
            #2,
        ): 10,
        (
            Atom('OverloadParam' type=dynamic),
            #2,
        ): 11,
        (
            Atom('OverloadReturn' type=dynamic),
            #2,
        ): 12,
        (
            Atom('PrivateImplementationParam' type=dynamic),
            #2,
        ): 13,
        (
            Atom('PrivateImplementationReturn' type=dynamic),
            #2,
        ): 14,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            26,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {
                Id(
                    (
                        Atom('B' type=inline),
                        #2,
                    ),
                ),
            },
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            28,
                        ),
                        end: SourcePos(
                            44,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        2: Symbol {
            symbol_id: 2,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            46,
                        ),
                        end: SourcePos(
                            65,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {
                Id(
                    (
                        Atom('IBase' type=inline),
                        #2,
                    ),
                ),
            },
            exports: {},
        },
        3: Symbol {
            symbol_id: 3,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            67,
                        ),
                        end: SourcePos(
                            470,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {
                Id(
                    (
                        Atom('BBase' type=inline),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('IBase' type=inline),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('PropValue' type=dynamic),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('ReturnValue' type=dynamic),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('Param' type=inline),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('OverloadParam' type=dynamic),
                        #2,
                    ),
                ),
                Id(
                    (
                        Atom('OverloadReturn' type=dynamic),
                        #2,
                    ),
                ),
            },
            exports: {},
        },
        4: Symbol {
            symbol_id: 4,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            472,
                        ),
                        end: SourcePos(
                            490,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        5: Symbol {
            symbol_id: 5,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            491,
                        ),
                        end: SourcePos(
                            511,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        6: Symbol {
            symbol_id: 6,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            512,
                        ),
                        end: SourcePos(
                            526,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        7: Symbol {
            symbol_id: 7,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            527,
                        ),
                        end: SourcePos(
                            548,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        8: Symbol {
            symbol_id: 8,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            549,
                        ),
                        end: SourcePos(
                            571,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        9: Symbol {
            symbol_id: 9,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            572,
                        ),
                        end: SourcePos(
                            592,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        10: Symbol {
            symbol_id: 10,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            593,
                        ),
                        end: SourcePos(
                            610,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        11: Symbol {
            symbol_id: 11,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            611,
                        ),
                        end: SourcePos(
                            633,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        12: Symbol {
            symbol_id: 12,
            is_public: true,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            634,
                        ),
                        end: SourcePos(
                            657,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        13: Symbol {
            symbol_id: 13,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            658,
                        ),
                        end: SourcePos(
                            693,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
        14: Symbol {
            symbol_id: 14,
            is_public: false,
            decls: {
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            694,
                        ),
                        end: SourcePos(
                            730,
                        ),
                    },
                    kind: Definition,
                },
            },
            deps: {},
            exports: {},
        },
    },
    traced_re_exports: {},
}
== export definitions ==
[A]: file:///mod.ts:0..26
  export class A {
    b: B;
  }
