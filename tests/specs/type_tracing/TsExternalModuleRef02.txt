# mod.ts
import A = require("./a.ts");

export default A;

# a.ts
namespace MyNamespace {
  export function B() {}
}

export = MyNamespace;

# output
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_decls: {},
    exports: {
        "default": 1,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "A",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            29,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./a.ts",
                        },
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            46,
                        ),
                        end: SourcePos(
                            47,
                        ),
                    },
                    kind: Target(
                        (
                            "A",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            31,
                        ),
                        end: SourcePos(
                            48,
                        ),
                    },
                    kind: Target(
                        (
                            "A",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "A",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {},
}
file:///a.ts: EsmModuleSymbol {
    module_id: ModuleId(
        1,
    ),
    specifier: "file:///a.ts",
    child_decls: {
        0,
    },
    exports: {
        "default": 2,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "MyNamespace",
            #2,
        ): 0,
        (
            "B",
            #3,
        ): 1,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            50,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            61,
                        ),
                        end: SourcePos(
                            72,
                        ),
                    },
                    kind: Target(
                        (
                            "MyNamespace",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "B",
                        #3,
                    ),
                ),
            },
            child_decls: {
                1,
            },
            exports: {
                "B": 1,
            },
        },
        1: Symbol {
            symbol_id: 1,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            26,
                        ),
                        end: SourcePos(
                            48,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        2: Symbol {
            symbol_id: 2,
            is_public: true,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            52,
                        ),
                        end: SourcePos(
                            73,
                        ),
                    },
                    kind: Target(
                        (
                            "MyNamespace",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "MyNamespace",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
    traced_re_exports: {},
    traced_referrers: {
        ModuleId(
            0,
        ): Named(
            {
                "default",
            },
        ),
    },
}
== export definitions ==
[default]: file:///a.ts:0..50
  namespace MyNamespace {
    export function B() {}
  }
