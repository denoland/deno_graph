# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.ts" } }

# https://jsr.io/@scope/a/1.0.0/mod.ts
export class MyClass {
  prop!: typeof MyClass.prototype.myPrivateMember;
  private myPrivateMember!: string;
}

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 112,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  error[unsupported-private-member-reference]: public API member (MyClass.prototype.prop) is referencing or transitively referencing a class private member (MyClass.prototype.myPrivateMember)
   --> https://jsr.io/@scope/a/1.0.0/mod.ts:3:3
    |
  3 |   private myPrivateMember!: string;
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the reference
    = hint: extract the type of the private member to a type alias and reference the type alias instead

    info: private members can not be referenced from public API members
    info: this is because fast check removes private members from the types
    docs: https://jsr.io/go/slow-type-unsupported-private-member-reference

