# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.ts" } }

# https://jsr.io/@scope/a/1.0.0/mod.ts
export class Foo extends Error {
  public override name = 'Foo';
}

export class Bar extends Foo {
  public override name = 'Bar';
}

export class Baz extends Foo {
  public constructor(public override name: string) {
    super(name);
  }
}

interface HeaderField {
  name: string;
}

export class BaseHeader {
  fields: HeaderField[] = [{ name: 'Date', }];
}

export class ChildHeader extends BaseHeader {
  override fields = [{
    name: 'Content-ID'
  }];
}

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 461,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a@*": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  {}
  export class Foo extends Error {
    declare public name: string;
  }
  export class Bar extends Foo {
    declare public name: string;
  }
  export class Baz extends Foo {
    declare name: string;
    public constructor(name: string){
      super({} as never);
    }
  }
  interface HeaderField {
    name: string;
  }
  export class BaseHeader {
    declare fields: HeaderField[];
  }
  export class ChildHeader extends BaseHeader {
    override fields = [
      {
        name: 'Content-ID'
      }
    ];
  }
  --- DTS ---
  export declare class Foo extends Error {
    public name: string;
  }
  export declare class Bar extends Foo {
    public name: string;
  }
  export declare class Baz extends Foo {
    name: string;
    public constructor(name: string);
  }
  interface HeaderField {
    name: string;
  }
  export declare class BaseHeader {
    fields: HeaderField[];
  }
  export declare class ChildHeader extends BaseHeader {
    override fields: [{
        name: string;
      }];
  }
