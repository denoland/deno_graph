# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.ts" } }

# https://jsr.io/@scope/a/1.0.0/mod.ts
export class Export {
  prop: typeof Public1.prototype.nonExistent;
}
class Public1 {
  prop: string;
}

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "resolutionMode": "import",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 104,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a@*": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  error[not-found-reference]: could not resolve 'Public1.prototype.nonExistent' referenced from 'Export.prototype.prop'
   --> https://jsr.io/@scope/a/1.0.0/mod.ts:4:1
    |
  4 | class Public1 {
    | ^^^^^^^^^^^^^^^
    |
  5 |   prop: string;
    | ^^^^^^^^^^^^^^^
    |
  6 | }
    | ^ this is the reference
    |
    = hint: fix the reference to point to a symbol that exists

    info: this error may be the result of a bug in Deno - if you think this is the case, please open an issue
    docs: https://jsr.io/go/slow-type-not-found-reference
