# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.js" } }

# https://jsr.io/@scope/a/1.0.0/mod.js
export class MyClass {
  method() {
    return Math.random();
  }
}

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 68,
      "mediaType": "JavaScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.js"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.js"
  },
  "packages": {
    "@scope/a@*": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.js:
  warning[unsupported-javascript-entrypoint]: used a JavaScript module without type declarations as an entrypoint
   --> https://jsr.io/@scope/a/1.0.0/mod.js
    = hint: add a type declaration (d.ts) for the JavaScript module, or rewrite it to TypeScript

    info: JavaScript files with no corresponding declaration require type inference to be type checked
    info: fast check avoids type inference, so JavaScript entrypoints should be avoided
    docs: https://jsr.io/go/slow-type-unsupported-javascript-entrypoint
