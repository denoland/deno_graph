# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.ts" } }

# https://jsr.io/@scope/a/1.0.0/mod.ts
export const foo = [1, 2] as const;
export const bar = [1, , 2] as const;
export const obj = {
  str: "bar",
  bool: true,
  bool2: false,
  num: 42,
  nullish: null
} as const;

export const spread = {
  foo: 1,
  ...obj,
} as const;

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 235,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  error[unknown-var-type]: unknown type for variable in the public API
    --> https://jsr.io/@scope/a/1.0.0/mod.ts:11:14
     |
  11 | export const spread = {
     |              ^^^^^^ this variable's type could not be inferred because its initializer
     |
  13 |   ...obj,
     |   --- contains this spread property, which can not be inferred
     |
     = hint: add an explicit type annotation to the variable declaration

    info: all variables in the public API must have a known type
    info: spread properties can not be inferred because the type of the resulting object can not be narrowed without a type checker
    docs: https://jsr.io/go/slow-type-unknown-var-type

