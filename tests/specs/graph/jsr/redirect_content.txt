# https://jsr.io/@scope/a/meta.json
{
  "versions": {
    "1.0.0": {}
  }
}

# https://jsr.io/@scope/a/1.0.0_meta.json
{
  "manifest": {},
  "exports": {
    ".": "./mod.ts"
  }
}

# https://jsr.io/@scope/a/1.0.0/mod.ts
HEADERS: {"location":"./other.ts"}

# https://jsr.io/@scope/a/1.0.0/other.ts
// This should never happen on the JSR registry. If we ever
// supported this we'd need to make sure it would use the proper
// checksums from the manifest. Additionally, we'd need a way to
// store this redirect in the manifest information to ensure it's
// locked.
console.log(1);

# mod.ts
import 'jsr:@scope/a';

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 23,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts",
      "error": "Redirecting to a JSR package HTTPS URL is not supported (redirected to 'https://jsr.io/@scope/a/1.0.0/other.ts')"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a": "@scope/a@1.0.0"
  }
}
