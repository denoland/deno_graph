# https://jsr.io/@scope/a/meta.json
{"versions": { "1.0.0": {} } }

# https://jsr.io/@scope/a/1.0.0_meta.json
{ "exports": { ".": "./mod.ts" } }

# https://jsr.io/@scope/a/1.0.0/mod.ts
class Base {
  constructor(a: number, b: number) {
  }
}
export class Child extends Base {
  constructor() {
    super(1, 2);
  }
}
class SpreadBase {
  constructor(...params: string[]) {
  }
}
export class SpreadChild extends SpreadBase {
  constructor() {
    super(...[1, 2]);
  }
}

# mod.ts
import 'jsr:@scope/a'

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "span": {
              "start": {
                "line": 0,
                "character": 7
              },
              "end": {
                "line": 0,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 22,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 286,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a": "@scope/a@1.0.0"
  }
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  {}
  class Base {
    constructor(a: number, b: number){}
  }
  export class Child extends Base {
    constructor(){
      super({} as never, {} as never);
    }
  }
  class SpreadBase {
    constructor(...params: string[]){}
  }
  export class SpreadChild extends SpreadBase {
    constructor(){
      super(...({} as never));
    }
  }
  --- DTS ---
  declare class Base {
    constructor(a: number, b: number);
  }
  export declare class Child extends Base {
    constructor();
  }
  declare class SpreadBase {
    constructor(...params: string[]);
  }
  export declare class SpreadChild extends SpreadBase {
    constructor();
  }
