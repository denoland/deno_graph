~~ {
  "pkgChecksums": {}
} ~~
# https://jsr.io/@scope/a/meta.json
{
  "versions": {
    "1.0.0": {}
  }
}

# https://jsr.io/@scope/a/1.0.0_meta.json
{
  "exports": {
    ".": "./mod.ts"
  },
  "lockfileChecksum": "thisCodeShouldUseThisInTheLockfileInsteadOfComputingFromTheBytes"
}

# mod.ts
// What's happening here is the 1.0.0_meta.json file has the lockfileChecksum property
// set. This will be set when the metadata file is copied from the global to the local
// cache. When that's the case, ensure the code uses the lockfileChecksum property because
// it will contain the original checksum of the metadata found in the global cache rather
// than the checksum that's found in the vendor folder.
import 'jsr:@scope/a'

# https://jsr.io/@scope/a/1.0.0/mod.ts
console.log('HI');

# output
{
  "roots": [
    "file:///mod.ts"
  ],
  "modules": [
    {
      "kind": "esm",
      "dependencies": [
        {
          "specifier": "jsr:@scope/a",
          "code": {
            "specifier": "jsr:@scope/a",
            "resolutionMode": "import",
            "span": {
              "start": {
                "line": 5,
                "character": 7
              },
              "end": {
                "line": 5,
                "character": 21
              }
            }
          }
        }
      ],
      "size": 433,
      "mediaType": "TypeScript",
      "specifier": "file:///mod.ts"
    },
    {
      "kind": "esm",
      "size": 19,
      "mediaType": "TypeScript",
      "specifier": "https://jsr.io/@scope/a/1.0.0/mod.ts"
    }
  ],
  "redirects": {
    "jsr:@scope/a": "https://jsr.io/@scope/a/1.0.0/mod.ts"
  },
  "packages": {
    "@scope/a@*": "@scope/a@1.0.0"
  }
}

pkg manifest checksums:
{
  "@scope/a@1.0.0": "thisCodeShouldUseThisInTheLockfileInsteadOfComputingFromTheBytes"
}

Fast check https://jsr.io/@scope/a/1.0.0/mod.ts:
  {}
  <empty>
