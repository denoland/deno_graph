# mod.ts
import Test from "./a.ts";
import { C1, C2, C3 as CInterface } from "./a.ts";

export default Test;

export { C1, C2, CInterface };

# a.ts
export { default as C1 } from "./class.ts";
export { default as C2 } from "./function.ts";
export { default as C3 } from "./interface.ts";

export default class Test {
    prop: A;
}

class A {
    a: number;
    b: B;
}

class B {
    b: number;
    #c: C;
}

class C {
}

# class.ts
export default class Test {
}

# interface.ts
export default interface Test {
}

# function.ts
export default function Test() {
}

# output
file:///a.ts: EsmModuleSymbol {
    module_id: ModuleId(
        1,
    ),
    specifier: "file:///a.ts",
    child_decls: {
        4,
        5,
        6,
    },
    exports: {
        "C1": 0,
        "C2": 1,
        "C3": 2,
        "default": 3,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 3,
        (
            "A",
            #2,
        ): 4,
        (
            "B",
            #2,
        ): 5,
        (
            "C",
            #2,
        ): 6,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            9,
                        ),
                        end: SourcePos(
                            22,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./class.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            53,
                        ),
                        end: SourcePos(
                            66,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./function.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        2: Symbol {
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            100,
                        ),
                        end: SourcePos(
                            113,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./interface.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        3: Symbol {
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            140,
                        ),
                        end: SourcePos(
                            182,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "A",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
        4: Symbol {
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            184,
                        ),
                        end: SourcePos(
                            220,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "B",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
        5: Symbol {
            symbol_id: 5,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            222,
                        ),
                        end: SourcePos(
                            259,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        6: Symbol {
            symbol_id: 6,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            261,
                        ),
                        end: SourcePos(
                            272,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
    },
}
file:///class.ts: EsmModuleSymbol {
    module_id: ModuleId(
        2,
    ),
    specifier: "file:///class.ts",
    child_decls: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            29,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
    },
}
file:///function.ts: EsmModuleSymbol {
    module_id: ModuleId(
        3,
    ),
    specifier: "file:///function.ts",
    child_decls: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            34,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
    },
}
file:///interface.ts: EsmModuleSymbol {
    module_id: ModuleId(
        4,
    ),
    specifier: "file:///interface.ts",
    child_decls: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            33,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "Test",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
}
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_decls: {},
    exports: {
        "default": 4,
        "C1": 1,
        "C2": 2,
        "CInterface": 3,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
        (
            "C1",
            #2,
        ): 1,
        (
            "C2",
            #2,
        ): 2,
        (
            "CInterface",
            #2,
        ): 3,
    },
    symbols: {
        0: Symbol {
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            7,
                        ),
                        end: SourcePos(
                            11,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./a.ts",
                        },
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            94,
                        ),
                        end: SourcePos(
                            98,
                        ),
                    },
                    kind: Target(
                        (
                            "Test",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        1: Symbol {
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            36,
                        ),
                        end: SourcePos(
                            38,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "C1",
                            ),
                            specifier: "./a.ts",
                        },
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            101,
                        ),
                        end: SourcePos(
                            131,
                        ),
                    },
                    kind: TargetSelf,
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            110,
                        ),
                        end: SourcePos(
                            112,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        2: Symbol {
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            40,
                        ),
                        end: SourcePos(
                            42,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "C2",
                            ),
                            specifier: "./a.ts",
                        },
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            101,
                        ),
                        end: SourcePos(
                            131,
                        ),
                    },
                    kind: TargetSelf,
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            114,
                        ),
                        end: SourcePos(
                            116,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        3: Symbol {
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            44,
                        ),
                        end: SourcePos(
                            60,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "C3",
                            ),
                            specifier: "./a.ts",
                        },
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            101,
                        ),
                        end: SourcePos(
                            131,
                        ),
                    },
                    kind: TargetSelf,
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            118,
                        ),
                        end: SourcePos(
                            128,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_decls: {},
            exports: {},
        },
        4: Symbol {
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            79,
                        ),
                        end: SourcePos(
                            99,
                        ),
                    },
                    kind: Target(
                        (
                            "Test",
                            #2,
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "Test",
                        #2,
                    ),
                ),
            },
            child_decls: {},
            exports: {},
        },
    },
}
== export definitions ==
[C1]: file:///class.ts:0..29
  export default class Test {
  }
[C2]: file:///function.ts:0..34
  export default function Test() {
  }
[CInterface]: file:///interface.ts:0..33
  export default interface Test {
  }
[default]: file:///a.ts:140..182
  export default class Test {
      prop: A;
  }
