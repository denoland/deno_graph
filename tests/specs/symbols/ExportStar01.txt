# mod.ts
export * as namespace from "./a.ts";

# a.ts
export { default as C1 } from "./class.ts";
export { default as C2 } from "./function.ts";
export { default as C3 } from "./interface.ts";

export default class Test {
    prop: A;
}

class A {
    a: number;
    b: B;
}

class B {
    b: number;
    #c: C;
}

class C {
}

# class.ts
export default class Test {
}

# interface.ts
export default interface Test {
}

# function.ts
export default function Test() {
}

# output
file:///a.ts: EsmModuleSymbol {
    module_id: ModuleId(
        1,
    ),
    specifier: "file:///a.ts",
    child_ids: {
        5,
        8,
        10,
    },
    exports: {
        "C1": 0,
        "C2": 1,
        "C3": 2,
        "default": 3,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 3,
        (
            "A",
            #2,
        ): 5,
        (
            "B",
            #2,
        ): 8,
        (
            "C",
            #2,
        ): 10,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            9,
                        ),
                        end: SourcePos(
                            22,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./class.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        1: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            53,
                        ),
                        end: SourcePos(
                            66,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./function.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        2: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            100,
                        ),
                        end: SourcePos(
                            113,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Name(
                                "default",
                            ),
                            specifier: "./interface.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        3: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            140,
                        ),
                        end: SourcePos(
                            182,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export default class Test {\n    prop: A;\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                4,
            },
        },
        4: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            172,
                        ),
                        end: SourcePos(
                            180,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "prop: A;",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "A",
                        #2,
                    ),
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        5: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 5,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            184,
                        ),
                        end: SourcePos(
                            220,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "class A {\n    a: number;\n    b: B;\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                6,
                7,
            },
        },
        6: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 6,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            198,
                        ),
                        end: SourcePos(
                            208,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "a: number;",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        7: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 7,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            213,
                        ),
                        end: SourcePos(
                            218,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "b: B;",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "B",
                        #2,
                    ),
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        8: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 8,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            222,
                        ),
                        end: SourcePos(
                            259,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "class B {\n    b: number;\n    #c: C;\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                9,
            },
        },
        9: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 9,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            236,
                        ),
                        end: SourcePos(
                            246,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "b: number;",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        10: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 10,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            261,
                        ),
                        end: SourcePos(
                            272,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "class C {\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
file:///class.ts: EsmModuleSymbol {
    module_id: ModuleId(
        2,
    ),
    specifier: "file:///class.ts",
    child_ids: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                2,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            29,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export default class Test {\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
file:///function.ts: EsmModuleSymbol {
    module_id: ModuleId(
        3,
    ),
    specifier: "file:///function.ts",
    child_ids: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                3,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            34,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export default function Test() {\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
file:///interface.ts: EsmModuleSymbol {
    module_id: ModuleId(
        4,
    ),
    specifier: "file:///interface.ts",
    child_ids: {},
    exports: {
        "default": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                4,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            33,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export default interface Test {\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_ids: {},
    exports: {
        "namespace": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {},
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            7,
                        ),
                        end: SourcePos(
                            21,
                        ),
                    },
                    kind: FileRef(
                        FileDep {
                            name: Star,
                            specifier: "./a.ts",
                        },
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
== export definitions ==
[namespace]: file:///mod.ts:7..21
  * as namespace
