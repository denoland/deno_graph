# mod.ts
// declaration merging
interface Test {
  prop1: Prop1;
}
interface Test {
  prop2: Prop2;
}

interface Prop1 {}
interface Prop2 {}

export { Test };

export * from "./a.ts";

# a.ts
interface A1 {
  prop1: string;
}
interface A1 {
  prop2: Prop2;
}

interface Prop2 {}

export { A1 };

# output
file:///a.ts: EsmModuleInfo {
    module_id: ModuleId(
        1,
    ),
    specifier: "file:///a.ts",
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "A1",
            #2,
        ): 1,
        (
            "Prop2",
            #2,
        ): 4,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            102,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface A1 {\n  prop1: string;\n}\ninterface A1 {\n  prop2: Prop2;\n}\n\ninterface Prop2 {}\n\nexport { A1 };",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {
                1,
                4,
            },
            exports: {
                "A1": 1,
            },
            members: {},
        },
        1: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            33,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface A1 {\n  prop1: string;\n}",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            34,
                        ),
                        end: SourcePos(
                            66,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface A1 {\n  prop2: Prop2;\n}",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            88,
                        ),
                        end: SourcePos(
                            102,
                        ),
                    },
                    kind: TargetSelf,
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            97,
                        ),
                        end: SourcePos(
                            99,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                2,
                3,
            },
        },
        2: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            17,
                        ),
                        end: SourcePos(
                            31,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "prop1: string;",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        3: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            51,
                        ),
                        end: SourcePos(
                            64,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "prop2: Prop2;",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "Prop2",
                        #2,
                    ),
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        4: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            68,
                        ),
                        end: SourcePos(
                            86,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Prop2 {}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
file:///mod.ts: EsmModuleInfo {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    re_exports: [
        "./a.ts",
    ],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 1,
        (
            "Prop1",
            #2,
        ): 4,
        (
            "Prop2",
            #2,
        ): 5,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            23,
                        ),
                        end: SourcePos(
                            174,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Test {\n  prop1: Prop1;\n}\ninterface Test {\n  prop2: Prop2;\n}\n\ninterface Prop1 {}\ninterface Prop2 {}\n\nexport { Test };\n\nexport * from \"./a.ts\";",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {
                1,
                4,
                5,
            },
            exports: {
                "Test": 1,
            },
            members: {},
        },
        1: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            23,
                        ),
                        end: SourcePos(
                            57,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Test {\n  prop1: Prop1;\n}",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            58,
                        ),
                        end: SourcePos(
                            92,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Test {\n  prop2: Prop2;\n}",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            133,
                        ),
                        end: SourcePos(
                            149,
                        ),
                    },
                    kind: TargetSelf,
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            142,
                        ),
                        end: SourcePos(
                            146,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                2,
                3,
            },
        },
        2: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            42,
                        ),
                        end: SourcePos(
                            55,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "prop1: Prop1;",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "Prop1",
                        #2,
                    ),
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        3: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            77,
                        ),
                        end: SourcePos(
                            90,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "prop2: Prop2;",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "Prop2",
                        #2,
                    ),
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        4: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            94,
                        ),
                        end: SourcePos(
                            112,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Prop1 {}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        5: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 5,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            113,
                        ),
                        end: SourcePos(
                            131,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "interface Prop2 {}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
== export definitions ==
[Test]: file:///mod.ts:23..57
  interface Test {
    prop1: Prop1;
  }
file:///mod.ts:58..92
  interface Test {
    prop2: Prop2;
  }
[A1]: file:///a.ts:0..33
  interface A1 {
    prop1: string;
  }
file:///a.ts:34..66
  interface A1 {
    prop2: Prop2;
  }
