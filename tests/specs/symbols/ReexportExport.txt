# mod.ts
export function foo(): void {}
export { foo as bar };

# output
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_ids: {
        0,
    },
    exports: {
        "foo": 0,
        "bar": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "foo",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            30,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "<omitted>",
                        ),
                    ),
                },
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            31,
                        ),
                        end: SourcePos(
                            53,
                        ),
                    },
                    kind: TargetSelf,
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
== export definitions ==
[bar]: file:///mod.ts:0..30
  export function foo(): void {}
[foo]: file:///mod.ts:0..30
  export function foo(): void {}
