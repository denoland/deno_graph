# mod.ts
namespace Test {
  export function test() {}
}

export import Resolved = Test.test;
export import Unresolved = Test.NotFound;

# output
file:///mod.ts: EsmModuleInfo {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 1,
        (
            "test",
            #3,
        ): 2,
        (
            "Resolved",
            #2,
        ): 3,
        (
            "Unresolved",
            #2,
        ): 4,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            125,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "namespace Test {\n  export function test() {}\n}\n\nexport import Resolved = Test.test;\nexport import Unresolved = Test.NotFound;",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {
                1,
            },
            exports: {
                "Resolved": 3,
                "Unresolved": 4,
            },
            members: {},
        },
        1: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            46,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "namespace Test {\n  export function test() {}\n}",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "test",
                        #3,
                    ),
                ),
            },
            child_ids: {
                2,
            },
            exports: {
                "test": 2,
            },
            members: {},
        },
        2: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 2,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            19,
                        ),
                        end: SourcePos(
                            44,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export function test() {}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {},
        },
        3: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 3,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            48,
                        ),
                        end: SourcePos(
                            83,
                        ),
                    },
                    kind: QualifiedTarget(
                        (
                            "Test",
                            #2,
                        ),
                        [
                            "test",
                        ],
                    ),
                },
            ],
            deps: {
                QualifiedId(
                    (
                        "Test",
                        #2,
                    ),
                    [
                        "test",
                    ],
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
        4: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 4,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            84,
                        ),
                        end: SourcePos(
                            125,
                        ),
                    },
                    kind: QualifiedTarget(
                        (
                            "Test",
                            #2,
                        ),
                        [
                            "NotFound",
                        ],
                    ),
                },
            ],
            deps: {
                QualifiedId(
                    (
                        "Test",
                        #2,
                    ),
                    [
                        "NotFound",
                    ],
                ),
            },
            child_ids: {},
            exports: {},
            members: {},
        },
    },
}
== export definitions ==
[Resolved]: file:///mod.ts:19..44
  export function test() {}
[Unresolved]: file:///mod.ts
  Unresolved Part("NotFound") (["NotFound"])
