# mod.ts
export interface Test {
  prop: import("./a.ts").A.B,
}

# a.ts
export namespace A {
  export interface B {
    prop: string,
  }
}

# output
file:///a.ts: EsmModuleSymbol {
    module_id: ModuleId(
        1,
    ),
    specifier: "file:///a.ts",
    child_ids: {
        0,
    },
    exports: {
        "A": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "A",
            #2,
        ): 0,
        (
            "B",
            #3,
        ): 1,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            67,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export namespace A {\n  export interface B {\n    prop: string,\n  }\n}",
                        ),
                    ),
                },
            ],
            deps: {
                Id(
                    (
                        "B",
                        #3,
                    ),
                ),
            },
            child_ids: {
                1,
            },
            exports: {
                "B": 1,
            },
            members: {},
        },
        1: Symbol {
            module_id: ModuleId(
                1,
            ),
            symbol_id: 1,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            23,
                        ),
                        end: SourcePos(
                            65,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export interface B {\n    prop: string,\n  }",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                0: SymbolMember {
                    symbol_member_id: 0,
                    decl: SymbolMemberDecl(
                        "<omitted>",
                    ),
                    deps: {},
                },
            },
        },
    },
}
file:///mod.ts: EsmModuleSymbol {
    module_id: ModuleId(
        0,
    ),
    specifier: "file:///mod.ts",
    child_ids: {
        0,
    },
    exports: {
        "Test": 0,
    },
    re_exports: [],
    swc_id_to_symbol_id: {
        (
            "Test",
            #2,
        ): 0,
    },
    symbols: {
        0: Symbol {
            module_id: ModuleId(
                0,
            ),
            symbol_id: 0,
            decls: [
                SymbolDecl {
                    range: SourceRange {
                        start: SourcePos(
                            0,
                        ),
                        end: SourcePos(
                            55,
                        ),
                    },
                    kind: Definition(
                        SymbolNode(
                            "export interface Test {\n  prop: import(\"./a.ts\").A.B,\n}",
                        ),
                    ),
                },
            ],
            deps: {},
            child_ids: {},
            exports: {},
            members: {
                0: SymbolMember {
                    symbol_member_id: 0,
                    decl: SymbolMemberDecl(
                        "<omitted>",
                    ),
                    deps: {
                        ImportType(
                            "./a.ts",
                            [
                                "A",
                                "B",
                            ],
                        ),
                    },
                },
            },
        },
    },
}
== export definitions ==
[Test]: file:///mod.ts:0..55
  export interface Test {
    prop: import("./a.ts").A.B,
  }
