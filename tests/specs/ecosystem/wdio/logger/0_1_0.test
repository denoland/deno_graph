wdio/logger/0.1.0
-- deno.lock --
{
  "version": "3",
  "packages": {
    "specifiers": {
      "npm:loglevel@^1.6.0": "npm:loglevel@1.9.1"
    },
    "npm": {
      "loglevel@1.9.1": {
        "integrity": "sha512-hP3I3kCrDIMuRwAwHltphhDM1r8i55H33GgqjXbrisuJhF4kRhW1dNuxsRklp4bXl8DSdLaNLuiL4A/LWRfxvg==",
        "dependencies": {}
      }
    }
  },
  "remote": {}
}

===

== FAST CHECK EMIT FAILED ==
error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/node.ts:169:27
    | 
169 | getLogger.waitForBuffer = async () => new Promise<void>(resolve => {
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
170 |     // @ts-ignore
    | ^^^^^^^^^^^^^^^^^
    | 
171 |     if (logFile && Array.isArray(logFile.writableBuffer) && logFile.writableBuffer.length !== 0) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
172 |         return setTimeout(async () => {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
173 |             await getLogger.waitForBuffer()
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
174 |             resolve()
    | ^^^^^^^^^^^^^^^^^^^^^
    | 
175 |         }, 20)
    | ^^^^^^^^^^^^^^
    | 
176 |     }
    | ^^^^^
    | 
177 |     resolve()
    | ^^^^^^^^^^^^^
    | 
178 | })
    | ^^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type of 'Promise<void>' or 'Promise<never>' to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/node.ts:179:22
    | 
179 | getLogger.setLevel = (name: string, level: log.LogLevelDesc) => loggers[name].setLevel(level)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/node.ts:180:25
    | 
180 | getLogger.clearLogger = () => {
    |                         ^^^^^^^
    | 
181 |     if (logFile) {
    | ^^^^^^^^^^^^^^^^^^
    | 
182 |         logFile.end()
    | ^^^^^^^^^^^^^^^^^^^^^
    | 
183 |     }
    | ^^^^^
    | 
184 |     logFile = null
    | ^^^^^^^^^^^^^^^^^^
    | 
185 | }
    | ^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/node.ts:186:32
    | 
186 | getLogger.setLogLevelsConfig = (logLevels: Record<string, log.LogLevelDesc> = {}, wdioLogLevel: log.LogLevelDesc = DEFAULT_LEVEL) => {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
187 |     /**
    | ^^^^^^^
    | 
188 |      * set log level
    | ^^^^^^^^^^^^^^^^^^^^
    | 
189 |      */
    | ^^^^^^^
    | 
190 |     if (process.env.WDIO_LOG_LEVEL === undefined) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
191 |         process.env.WDIO_LOG_LEVEL = wdioLogLevel as string
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
192 |     }
    | ^^^^^
    | 
193 | 
    | 
    | 
194 |     logLevelsConfig = {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    | 
195 | 
    | 
    | 
196 |     /**
    | ^^^^^^^
    | 
197 |      * build logLevelsConfig object
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
198 |      */
    | ^^^^^^^
    | 
199 |     Object.entries(logLevels).forEach(([logName, logLevel]) => {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
200 |         const logLevelName = getLogLevelName(logName)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
201 |         logLevelsConfig[logLevelName] = logLevel
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
202 |     })
    | ^^^^^^
    | 
203 | 
    | 
    | 
204 |     /**
    | ^^^^^^^
    | 
205 |      * set log level for each logger
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
206 |      */
    | ^^^^^^^
    | 
207 |     Object.keys(loggers).forEach(logName => {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
208 |         const logLevelName = getLogLevelName(logName)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
209 | 
    | 
    | 
210 |         /**
    | ^^^^^^^^^^^
    | 
211 |          * either apply log level from logLevels object or use global logLevel
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
212 |          */
    | ^^^^^^^^^^^
    | 
213 |         const logLevel = typeof logLevelsConfig[logLevelName] !== 'undefined' ? logLevelsConfig[logLevelName] : process.env.WDIO_LOG_LEVEL as log.LogLevelDesc
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
214 | 
    | 
    | 
215 |         loggers[logName].setLevel(logLevel)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
216 |     })
    | ^^^^^^
    | 
217 | }
    | ^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


