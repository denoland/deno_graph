dklab/oak-routing-ctrl/0.1.1
-- deno.lock --
{
  "version": "3",
  "packages": {
    "specifiers": {
      "jsr:@oak/commons@0.7": "jsr:@oak/commons@0.7.0",
      "jsr:@oak/oak@^14.1.1": "jsr:@oak/oak@14.2.0",
      "jsr:@std/assert@0.218": "jsr:@std/assert@0.218.2",
      "jsr:@std/assert@^0.218.2": "jsr:@std/assert@0.218.2",
      "jsr:@std/bytes@0.218": "jsr:@std/bytes@0.218.2",
      "jsr:@std/bytes@^0.218.2": "jsr:@std/bytes@0.218.2",
      "jsr:@std/crypto@0.218": "jsr:@std/crypto@0.218.2",
      "jsr:@std/encoding@0.218": "jsr:@std/encoding@0.218.2",
      "jsr:@std/encoding@^0.218.2": "jsr:@std/encoding@0.218.2",
      "jsr:@std/http@0.218": "jsr:@std/http@0.218.2",
      "jsr:@std/io@0.218": "jsr:@std/io@0.218.2",
      "jsr:@std/media-types@0.218": "jsr:@std/media-types@0.218.2",
      "jsr:@std/path@0.218": "jsr:@std/path@0.218.2",
      "jsr:@std/path@^0.218.2": "jsr:@std/path@0.218.2",
      "npm:path-to-regexp@6.2.1": "npm:path-to-regexp@6.2.1"
    },
    "jsr": {
      "@oak/commons@0.7.0": {
        "integrity": "4bd889b3dc9ddac1b602034d88c137f06de7078775961b51081beb5f175c120b"
      },
      "@oak/oak@14.2.0": {
        "integrity": "b683b089693004ac3bca80b52159b3e9ad214dc8246ff5dc61ba658da78bc166",
        "dependencies": [
          "jsr:@oak/commons@0.7",
          "jsr:@std/assert@0.218",
          "jsr:@std/bytes@0.218",
          "jsr:@std/crypto@0.218",
          "jsr:@std/encoding@0.218",
          "jsr:@std/http@0.218",
          "jsr:@std/io@0.218",
          "jsr:@std/media-types@0.218",
          "jsr:@std/path@0.218",
          "npm:path-to-regexp@6.2.1"
        ]
      },
      "@std/assert@0.218.2": {
        "integrity": "7f0a5a1a8cf86607cd6c2c030584096e1ffad27fc9271429a8cb48cfbdee5eaf"
      },
      "@std/bytes@0.218.2": {
        "integrity": "91fe54b232dcca73856b79a817247f4a651dbb60d51baafafb6408c137241670"
      },
      "@std/crypto@0.218.2": {
        "integrity": "8c5031a3a1c3ac3bed3c0d4bed2fe7e7faedcb673bbfa0edd10570c8452f5cd2",
        "dependencies": [
          "jsr:@std/encoding@^0.218.2"
        ]
      },
      "@std/encoding@0.218.2": {
        "integrity": "da55a763c29bf0dbf06fd286430b358266eb99c28789d89fe9a3e28edecb8d8e"
      },
      "@std/http@0.218.2": {
        "integrity": "54223b62702e665b9dab6373ea2e51235e093ef47228d21cfa0469ee5ac75c9b",
        "dependencies": [
          "jsr:@std/encoding@^0.218.2"
        ]
      },
      "@std/io@0.218.2": {
        "integrity": "c64fbfa087b7c9d4d386c5672f291f607d88cb7d44fc299c20c713e345f2785f",
        "dependencies": [
          "jsr:@std/bytes@^0.218.2"
        ]
      },
      "@std/media-types@0.218.2": {
        "integrity": "1ed3bd2a05e44bad3fc2bab1767d0ce7f2fd68baee62a980751ce51633acb788"
      },
      "@std/path@0.218.2": {
        "integrity": "b568fd923d9e53ad76d17c513e7310bda8e755a3e825e6289a0ce536404e2662",
        "dependencies": [
          "jsr:@std/assert@^0.218.2"
        ]
      }
    },
    "npm": {
      "path-to-regexp@6.2.1": {
        "integrity": "sha512-JLyh7xT1kizaEvcaXOQwOc2/Yhw6KZOvPf1S8401UyLk86CU79LN3vl7ztXGm/pZ+YjoyAJ4rxmHwbkBXJX+yw==",
        "dependencies": {}
      }
    }
  },
  "remote": {}
}

===

== FAST CHECK EMIT FAILED ==
error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/Delete.ts:10:3
   | 
10 |   (target: Function, context: ClassMethodDecoratorContext) => {
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     debug(
   | ^^^^^^^^^^
12 |       `invoking Delete MethodDecorator for ${target.name} with pathPrefix ${path}`,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |       context,
   | ^^^^^^^^^^^^^^
14 |     );
   | ^^^^^^
15 |     register("delete", path, target.name);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |   };
   | ^^^ this function is missing an explicit return type
   = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/Put.ts:10:3
   | 
10 |   (target: Function, context: ClassMemberDecoratorContext) => {
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     debug(
   | ^^^^^^^^^^
12 |       `invoking Put MethodDecorator for ${target.name} with pathPrefix ${path}`,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |       context,
   | ^^^^^^^^^^^^^^
14 |     );
   | ^^^^^^
15 |     register("put", path, target.name);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |   };
   | ^^^ this function is missing an explicit return type
   = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/Post.ts:10:3
   | 
10 |   (target: Function, context: ClassMethodDecoratorContext) => {
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     debug(
   | ^^^^^^^^^^
12 |       `invoking Post MethodDecorator for ${target.name} with pathPrefix ${path}`,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |       context,
   | ^^^^^^^^^^^^^^
14 |       // target.constructor[Symbol.metadata],
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
15 |     );
   | ^^^^^^
16 |     register("post", path, target.name);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |   };
   | ^^^ this function is missing an explicit return type
   = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/Get.ts:10:3
   | 
10 |   (target: Function, context: ClassMethodDecoratorContext) => {
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     debug(
   | ^^^^^^^^^^
12 |       `invoking Get MethodDecorator for ${target.name} with pathPrefix ${path}`,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |       context,
   | ^^^^^^^^^^^^^^
14 |     );
   | ^^^^^^
15 |     register("get", path, target.name);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
16 |   };
   | ^^^ this function is missing an explicit return type
   = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/Controller.ts:16:3
   | 
16 |   (target: Controller, context: ClassDecoratorContext) => {
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |     debug(`invoking ControllerDecorator for ${target.name}`, context);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
18 |     const fnNames: string[] = Object.getOwnPropertyNames(target.prototype);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
19 |     for (const fnName of fnNames) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
20 |       const pair = store.get(fnName);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
21 |       if (!pair) continue;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
22 |       pair.forEach((path, verb, p) => p.set(verb, join(pathPrefix, path)));
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
23 |     }
   | ^^^^^
24 |   };
   | ^^^ this function is missing an explicit return type
   = hint: add an explicit return type of 'void' or 'never' to the function

  info: all functions in the public API must have an explicit return type
  info: function expressions without a return statement can have a return type of either 'void' or 'never'
  info: this function has no return statements, so a return type could not be inferred automatically
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


