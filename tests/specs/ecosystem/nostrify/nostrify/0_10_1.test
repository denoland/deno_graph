nostrify/nostrify/0.10.1
-- deno.lock --
{
  "version": "3",
  "packages": {
    "specifiers": {
      "npm:kysely@^0.27.3": "npm:kysely@0.27.3",
      "npm:lru-cache@^10.2.0": "npm:lru-cache@10.2.2",
      "npm:nostr-tools@^2.5.0": "npm:nostr-tools@2.5.2",
      "npm:websocket-ts@^2.1.5": "npm:websocket-ts@2.1.5",
      "npm:zod@^3.22.4": "npm:zod@3.23.8"
    },
    "npm": {
      "@noble/ciphers@0.5.3": {
        "integrity": "sha512-B0+6IIHiqEs3BPMT0hcRmHvEj2QHOLu+uwt+tqDDeVd0oyVzh7BPrDcPjRnV1PV/5LaknXJJQvOuRGR0zQJz+w==",
        "dependencies": {}
      },
      "@noble/curves@1.1.0": {
        "integrity": "sha512-091oBExgENk/kGj3AZmtBDMpxQPDtxQABR2B9lb1JbVTs6ytdzZNwvhxQ4MWasRNEzlbEH8jCWFCwhF/Obj5AA==",
        "dependencies": {
          "@noble/hashes": "@noble/hashes@1.3.1"
        }
      },
      "@noble/curves@1.2.0": {
        "integrity": "sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==",
        "dependencies": {
          "@noble/hashes": "@noble/hashes@1.3.2"
        }
      },
      "@noble/hashes@1.3.1": {
        "integrity": "sha512-EbqwksQwz9xDRGfDST86whPBgM65E0OH/pCgqW0GBVzO22bNE+NuIbeTb714+IfSjU3aRk47EUvXIb5bTsenKA==",
        "dependencies": {}
      },
      "@noble/hashes@1.3.2": {
        "integrity": "sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==",
        "dependencies": {}
      },
      "@scure/base@1.1.1": {
        "integrity": "sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA==",
        "dependencies": {}
      },
      "@scure/bip32@1.3.1": {
        "integrity": "sha512-osvveYtyzdEVbt3OfwwXFr4P2iVBL5u1Q3q4ONBfDY/UpOuXmOlbgwc1xECEboY8wIays8Yt6onaWMUdUbfl0A==",
        "dependencies": {
          "@noble/curves": "@noble/curves@1.1.0",
          "@noble/hashes": "@noble/hashes@1.3.2",
          "@scure/base": "@scure/base@1.1.1"
        }
      },
      "@scure/bip39@1.2.1": {
        "integrity": "sha512-Z3/Fsz1yr904dduJD0NpiyRHhRYHdcnyh73FZWiV+/qhWi83wNJ3NWolYqCEN+ZWsUz2TWwajJggcRE9r1zUYg==",
        "dependencies": {
          "@noble/hashes": "@noble/hashes@1.3.2",
          "@scure/base": "@scure/base@1.1.1"
        }
      },
      "kysely@0.27.3": {
        "integrity": "sha512-lG03Ru+XyOJFsjH3OMY6R/9U38IjDPfnOfDgO3ynhbDr+Dz8fak+X6L62vqu3iybQnj+lG84OttBuU9KY3L9kA==",
        "dependencies": {}
      },
      "lru-cache@10.2.2": {
        "integrity": "sha512-9hp3Vp2/hFQUiIwKo8XCeFVnrg8Pk3TYNPIR7tJADKi5YfcF7vEaK7avFHTlSy3kOKYaJQaalfEo6YuXdceBOQ==",
        "dependencies": {}
      },
      "nostr-tools@2.5.2": {
        "integrity": "sha512-Ls2FKh694eudBye6q89yJ5JhXjQle1MWp1yD2sBZ5j9M3IOBEW8ia9IED5W6daSAjlT/Z/pV77yTkdF45c1Rbg==",
        "dependencies": {
          "@noble/ciphers": "@noble/ciphers@0.5.3",
          "@noble/curves": "@noble/curves@1.2.0",
          "@noble/hashes": "@noble/hashes@1.3.1",
          "@scure/base": "@scure/base@1.1.1",
          "@scure/bip32": "@scure/bip32@1.3.1",
          "@scure/bip39": "@scure/bip39@1.2.1",
          "nostr-wasm": "nostr-wasm@0.1.0"
        }
      },
      "nostr-wasm@0.1.0": {
        "integrity": "sha512-78BTryCLcLYv96ONU8Ws3Q1JzjlAt+43pWQhIl86xZmWeegYCNLPml7yQ+gG3vR6V5h4XGj+TxO+SS5dsThQIA==",
        "dependencies": {}
      },
      "websocket-ts@2.1.5": {
        "integrity": "sha512-rCNl9w6Hsir1azFm/pbjBEFzLD/gi7Th5ZgOxMifB6STUfTSovYAzryWw0TRvSZ1+Qu1Z5Plw4z42UfTNA9idA==",
        "dependencies": {}
      },
      "zod@3.23.8": {
        "integrity": "sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==",
        "dependencies": {}
      }
    }
  },
  "remote": {}
}

===

== FAST CHECK EMIT PASSED ==

== TYPE CHECK FAILED ==
-- stdout --

-- stderr --
error: TS2416 [ERROR]: Property 'forEach' in type 'NSet' is not assignable to the same property in base type 'Set<NostrEvent>'.
  Type '(callbackfn: (event: NostrEvent, key: NostrEvent, set: this) => void, thisArg?: any) => void' is not assignable to type '(callbackfn: (value: NostrEvent, value2: NostrEvent, set: Set<NostrEvent>) => void, thisArg?: any) => void'.
    Types of parameters 'callbackfn' and 'callbackfn' are incompatible.
      Types of parameters 'set' and 'set' are incompatible.
        Type 'this' is not assignable to type 'Set<NostrEvent>'.
          Type 'NSet' is missing the following properties from type 'Set<NostrEvent>': union, intersection, difference, symmetricDifference, and 3 more.
  forEach(callbackfn: (event: NostrEvent, key: NostrEvent, set: typeof this) => void, thisArg?: any): void {}
  ~~~~~~~
    at file://<tmpdir>/src/NSet.ts:43:3

TS2416 [ERROR]: Property 'entries' in type 'NSet' is not assignable to the same property in base type 'Set<NostrEvent>'.
  Type '() => IterableIterator<[NostrEvent, NostrEvent]>' is not assignable to type '() => SetIterator<[NostrEvent, NostrEvent]>'.
    Type 'IterableIterator<[NostrEvent, NostrEvent]>' is missing the following properties from type 'SetIterator<[NostrEvent, NostrEvent]>': map, filter, take, drop, and 9 more.
  entries(): IterableIterator<[NostrEvent, NostrEvent]> {
  ~~~~~~~
    at file://<tmpdir>/src/NSet.ts:47:3

TS2416 [ERROR]: Property 'keys' in type 'NSet' is not assignable to the same property in base type 'Set<NostrEvent>'.
  Type '() => IterableIterator<NostrEvent>' is not assignable to type '() => SetIterator<NostrEvent>'.
    Type 'IterableIterator<NostrEvent>' is missing the following properties from type 'SetIterator<NostrEvent>': map, filter, take, drop, and 9 more.
  keys(): IterableIterator<NostrEvent> {
  ~~~~
    at file://<tmpdir>/src/NSet.ts:50:3

TS2416 [ERROR]: Property 'values' in type 'NSet' is not assignable to the same property in base type 'Set<NostrEvent>'.
  Type '() => IterableIterator<NostrEvent>' is not assignable to type '() => SetIterator<NostrEvent>'.
    Type 'IterableIterator<NostrEvent>' is missing the following properties from type 'SetIterator<NostrEvent>': map, filter, take, drop, and 9 more.
  values(): IterableIterator<NostrEvent> {
  ~~~~~~
    at file://<tmpdir>/src/NSet.ts:53:3

TS2416 [ERROR]: Property '[Symbol.iterator]' in type 'NSet' is not assignable to the same property in base type 'Set<NostrEvent>'.
  Type '() => IterableIterator<NostrEvent>' is not assignable to type '() => SetIterator<NostrEvent>'.
    Type 'IterableIterator<NostrEvent>' is missing the following properties from type 'SetIterator<NostrEvent>': map, filter, take, drop, and 9 more.
  [Symbol.iterator](): IterableIterator<NostrEvent> {
  ~~~~~~~~~~~~~~~~~
    at file://<tmpdir>/src/NSet.ts:56:3

Found 5 errors.

