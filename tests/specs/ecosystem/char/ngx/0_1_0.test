char/ngx/0.1.0
-- deno.lock --
{}
===

== FAST CHECK EMIT FAILED ==
error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /ngx.ts:109:14
    | 
109 | export const listen = (...extras: string[]) =>
    |              ^^^^^^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /ngx.ts:115:14
    | 
115 | export const letsEncrypt = (
    |              ^^^^^^^^^^^ this function is missing an explicit return type
    | 
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[unsupported-default-export-expr]: default export expression was too complex
   --> /ngx.ts:125:1
    | 
125 | export default Object.assign(
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
126 |   (value?: string, children?: LooseConfigNode[]) => ngx(value, children),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
127 |   { NGX_VERSION, listen, letsEncrypt }
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    | 
128 | );
    | ^^
    = hint: add an 'as' clause with an explicit type after the expression, or extract to a variable

  info: fast check was unable to infer the type of the default export expression
  docs: https://jsr.io/go/slow-type-unsupported-default-export-expr


