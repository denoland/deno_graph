wok/openbox/1.2.8
-- deno.lock --
{}
===

== FAST CHECK EMIT FAILED ==
error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/server.ts:47:3
   | 
47 |   toResponse() {
   |   ^^^^^^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:54:14
   | 
54 | export const OpenboxRequestErrorSourceSchema = Type.Union([
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:63:7
   | 
63 | const SchemaValidationErrorTypeSchema = Type.Literal("schemaValidation");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:64:7
   | 
64 | const ProtocolValidationErrorTypeSchema = Type.Literal("protocolValidation");
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:65:7
   | 
65 | const InternalErrorTypeSchema = Type.Literal("internal");
   |       ^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:67:14
   | 
67 | export const OpenboxRequestErrorTypeSchema = Type.Union([
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:75:14
   | 
75 | export const OpenboxSchemaValidationErrorSchema = Type.Object({
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:85:14
   | 
85 | export const OpenboxProtocolValidationErrorSchema = Type.Object({
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/server.ts:94:14
   | 
94 | export const OpenboxInternalErrorSchema = Type.Object({
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:132:1
    | 
132 | (
    | ^
133 |   source: OpenboxRequestErrorSource,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
134 |   type: OpenboxRequestErrorType,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
135 |   error: unknown,
    | ^^^^^^^^^^^^^^^^^
136 |   name?: string,
    | ^^^^^^^^^^^^^^^^
137 | ) => {
    | ^^^^^^
138 |   if (type === "schemaValidation") {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
139 |     return new Response(
    | ^^^^^^^^^^^^^^^^^^^^^^^^
140 |       JSON.stringify(
    | ^^^^^^^^^^^^^^^^^^^^^
141 |         {
    | ^^^^^^^^^
142 |           type,
    | ^^^^^^^^^^^^^^^
143 |           message: "Schema validation failed",
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
144 |           source,
    | ^^^^^^^^^^^^^^^^^
145 |           error,
    | ^^^^^^^^^^^^^^^^
146 |           ...(name !== undefined ? { name } : {}),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
147 |         } satisfies OpenboxSchemaValidationError,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
148 |         null,
    | ^^^^^^^^^^^^^
149 |         2,
    | ^^^^^^^^^^
150 |       ),
    | ^^^^^^^^
151 |       {
    | ^^^^^^^
152 |         status: 422,
    | ^^^^^^^^^^^^^^^^^^^^
153 |         headers: {
    | ^^^^^^^^^^^^^^^^^^
154 |           "Content-Type": MediaTypes.Json,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
155 |         },
    | ^^^^^^^^^^
156 |       },
    | ^^^^^^^^
157 |     );
    | ^^^^^^
158 |   }
    | ^^^
159 | 
    | 
160 |   if (type === "protocolValidation") {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
161 |     const underlyingCause = (error instanceof Error) ? error.cause : undefined;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
162 | 
    | 
163 |     if (underlyingCause) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
164 |       log?.(
    | ^^^^^^^^^^^^
165 |         "Request failed with underlying cause",
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
166 |         "type:",
    | ^^^^^^^^^^^^^^^^
167 |         type,
    | ^^^^^^^^^^^^^
168 |         "source:",
    | ^^^^^^^^^^^^^^^^^^
169 |         source,
    | ^^^^^^^^^^^^^^^
170 |         "name:",
    | ^^^^^^^^^^^^^^^^
171 |         name,
    | ^^^^^^^^^^^^^
172 |         "error:",
    | ^^^^^^^^^^^^^^^^^
173 |         error,
    | ^^^^^^^^^^^^^^
174 |       );
    | ^^^^^^^^
175 |     }
    | ^^^^^
176 | 
    | 
177 |     return new Response(
    | ^^^^^^^^^^^^^^^^^^^^^^^^
178 |       JSON.stringify(
    | ^^^^^^^^^^^^^^^^^^^^^
179 |         {
    | ^^^^^^^^^
180 |           type,
    | ^^^^^^^^^^^^^^^
181 |           source,
    | ^^^^^^^^^^^^^^^^^
182 |           ...(error instanceof Error ? { message: error.message } : {}),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
183 |           ...(name !== undefined ? { name } : {}),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
184 |         } satisfies OpenboxProtocolValidationError,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
185 |         null,
    | ^^^^^^^^^^^^^
186 |         2,
    | ^^^^^^^^^^
187 |       ),
    | ^^^^^^^^
188 |       {
    | ^^^^^^^
189 |         status: 400,
    | ^^^^^^^^^^^^^^^^^^^^
190 |         headers: {
    | ^^^^^^^^^^^^^^^^^^
191 |           "Content-Type": MediaTypes.Json,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
192 |         },
    | ^^^^^^^^^^
193 |       },
    | ^^^^^^^^
194 |     );
    | ^^^^^^
195 |   }
    | ^^^
196 | 
    | 
197 |   if (type === "internal") {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
198 |     log?.("Internal server error", "type:", type, "source:", source, "name:", name, "error:", error);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
199 |     return new Response(
    | ^^^^^^^^^^^^^^^^^^^^^^^^
200 |       JSON.stringify(
    | ^^^^^^^^^^^^^^^^^^^^^
201 |         {
    | ^^^^^^^^^
202 |           type,
    | ^^^^^^^^^^^^^^^
203 |           message: "Internal server error",
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
204 |         } satisfies OpenboxInternalError,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
205 |       ),
    | ^^^^^^^^
206 |       {
    | ^^^^^^^
207 |         status: 500,
    | ^^^^^^^^^^^^^^^^^^^^
208 |         headers: {
    | ^^^^^^^^^^^^^^^^^^
209 |           "Content-Type": MediaTypes.Json,
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
210 |         },
    | ^^^^^^^^^^
211 |       },
    | ^^^^^^^^
212 |     );
    | ^^^^^^
213 |   }
    | ^^^
214 | 
    | 
215 |   assertUnreachable(type);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
216 | };
    | ^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:233:17
    | 
233 | export function streamingMultipartFormData(schema: TSchema) {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:316:10
    | 
316 |   static encodeJson(body: unknown) {
    |          ^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:320:10
    | 
320 |   static encodeUrl(body: unknown) {
    |          ^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:327:3
    | 
327 |   media(mediaType: string, encoder?: (body: unknown) => BodyInit) {
    |   ^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:337:3
    | 
337 |   headers(headers: HeadersInit) {
    |   ^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:341:3
    | 
341 |   empty() {
    |   ^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:345:7
    | 
345 |   get json() {
    |       ^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:349:7
    | 
349 |   get urlEncoded() {
    |       ^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:353:7
    | 
353 |   get text() {
    |       ^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:357:7
    | 
357 |   get html() {
    |       ^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:361:7
    | 
361 |   get binary() {
    |       ^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:366:10
    | 
366 | function withPath<
    |          ^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:546:3
    | 
546 |   addRoute(
    |   ^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/server.ts:834:3
    | 
834 |   complete(_: UnimplementedRoutes<Routes>) {
    |   ^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/runtime/streaming_multipart_reader.ts:236:10
    | 
236 |   async *partReaders() {
    |          ^^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type of 'Promise<void>' or 'Promise<never>' to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-type]: missing explicit type in the public API
  --> /src/registry.ts:11:10
   | 
11 |   static default = new OpenboxSchemaRegistry();
   |          ^^^^^^^ this symbol is missing an explicit type
   = hint: add an explicit type annotation to the symbol

  info: all symbols in the public API must have an explicit type
  docs: https://jsr.io/go/slow-type-missing-explicit-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/registry.ts:15:3
   | 
15 |   merge(registry: OpenboxSchemaRegistry) {
   |   ^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/registry.ts:43:3
   | 
43 |   compile(schema: TSchema) {
   |   ^^^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/registry.ts:52:3
   | 
52 |   check(schema: TSchema, value: unknown) {
   |   ^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/registry.ts:56:3
   | 
56 |   deref(schema: TSchema) {
   |   ^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/endpoint.ts:204:3
    | 
204 |   jsonEndpoint<P extends string, J extends OpenboxJsonRouteConfig<P>>(
    |   ^^^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
   --> /src/endpoint.ts:275:10
    | 
275 | function eraseRoute<Routes, Path extends string, Method extends OpenboxRouteMethod, ReqMediaType extends string>() {
    |          ^^^^^^^^^^ this function is missing an explicit return type
    = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[missing-explicit-return-type]: missing explicit return type in the public API
  --> /src/docs.ts:56:17
   | 
56 | export function toOpenapiSpecSchemas(registry: OpenboxSchemaRegistry) {
   |                 ^^^^^^^^^^^^^^^^^^^^ this function is missing an explicit return type
   = hint: add an explicit return type to the function

  info: all functions in the public API must have an explicit return type
  docs: https://jsr.io/go/slow-type-missing-explicit-return-type


error[not-found-reference]: could not resolve 'OpenboxClientUnexpectedResponseError.name' referenced from 'OpenboxClientUnexpectedResponseError.prototype.name'
  --> /src/client.ts:54:1
   | 
54 | export class OpenboxClientUnexpectedResponseError extends Error {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
55 |   readonly name = OpenboxClientUnexpectedResponseError.name;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
56 |   constructor(readonly body: unknown, readonly response: Response) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
57 |     super(
   | ^^^^^^^^^^
58 |       `Received an unexpected response with status=${response.status} statusText=${response.statusText} contentType=${
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
59 |         response.headers.get("content-type")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
60 |       }`,
   | ^^^^^^^^^
61 |     );
   | ^^^^^^
62 |     Object.setPrototypeOf(this, new.target.prototype);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
63 |   }
   | ^^^
64 | }
   | ^ this is the reference
   = hint: fix the reference to point to a symbol that exists

  info: this error may be the result of a bug in Deno - if you think this is the case, please open an issue
  docs: https://jsr.io/go/slow-type-not-found-reference


error[not-found-reference]: could not resolve 'OpenboxClientResponseHeaderValidationError.name' referenced from 'OpenboxClientResponseHeaderValidationError.prototype.name'
  --> /src/client.ts:66:1
   | 
66 | export class OpenboxClientResponseHeaderValidationError extends Error {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
67 |   readonly name = OpenboxClientResponseHeaderValidationError.name;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
68 |   constructor(readonly headerName: string, readonly headerValue: unknown, readonly error: ValueError) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
69 |     super(`Header with name '${headerName}' and value '${headerValue}' failed schema validation`);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
70 |     Object.setPrototypeOf(this, new.target.prototype);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
71 |     Object.defineProperty(this, "message", {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
72 |       get() {
   | ^^^^^^^^^^^^^
73 |         return JSON.stringify(error);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
74 |       },
   | ^^^^^^^^
75 |       enumerable: false,
   | ^^^^^^^^^^^^^^^^^^^^^^^^
76 |       configurable: false,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
77 |     });
   | ^^^^^^^
78 |   }
   | ^^^
79 | }
   | ^ this is the reference
   = hint: fix the reference to point to a symbol that exists

  info: this error may be the result of a bug in Deno - if you think this is the case, please open an issue
  docs: https://jsr.io/go/slow-type-not-found-reference


error[not-found-reference]: could not resolve 'OpenboxClientResponseValidationError.name' referenced from 'OpenboxClientResponseValidationError.prototype.name'
  --> /src/client.ts:81:1
   | 
81 | export class OpenboxClientResponseValidationError extends Error {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
82 |   readonly name = OpenboxClientResponseValidationError.name;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
83 |   constructor(readonly response: Response, readonly data: string, readonly error: ValueError) {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
84 |     super(response.statusText);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
85 |     Object.setPrototypeOf(this, new.target.prototype);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
86 |     Object.defineProperty(this, "message", {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
87 |       get() {
   | ^^^^^^^^^^^^^
88 |         return JSON.stringify(error);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
89 |       },
   | ^^^^^^^^
90 |       enumerable: false,
   | ^^^^^^^^^^^^^^^^^^^^^^^^
91 |       configurable: false,
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
92 |     });
   | ^^^^^^^
93 |   }
   | ^^^
94 | }
   | ^ this is the reference
   = hint: fix the reference to point to a symbol that exists

  info: this error may be the result of a bug in Deno - if you think this is the case, please open an issue
  docs: https://jsr.io/go/slow-type-not-found-reference


